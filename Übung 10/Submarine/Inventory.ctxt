#BlueJ class context
comment0.params=collectable
comment0.target=void\ pushToInventory(Collectable)
comment0.text=\n\ F\u00FCgt\ einen\ Actor\ auf\ den\ ersten\ freien\ Platz\ insInventar\ hinzu,\n\ es\ entfernt\ dabei\ das\ hinzugef\u00FCgte\ Objekt\ auch\ aus\ der\ Welt.\n\ \n\ solte\ es\ jedoch\ einen\ aktor\ der\ selben\ Klasse\ geben\ und\ beide\ usable\ sein\n\ so\ wird\ der\ stack\ des\ vorhandenen\ Objectes\ erh\u00F6hr\n\ \n\ handelt\ es\ sich\ um\ ein\ Object\ mit\ stack\ und\ usable\n\ \n\ @param\ collectable\ Das,\ im\ Inventar\ zu\ speichernde\ Objekt.\n
comment1.params=collectable
comment1.target=void\ stackStack(Collectable)
comment1.text=\n\ erh\u00F6ht\ den\ stack\ des\ im\ Inventar\ vorhandenen\ Items\ um\ den\ Stack\ des\ gelieferten\n\ ist\ kein\ erw\u00E4hntes\ Item\ im\ Inventar\ vorhanden,\ so\ endet\ diese\ Methode\ im\ leeren\n
comment10.params=
comment10.target=void\ resetImage()
comment10.text=\n\ Zeichnet\ das\ Hintergrundbild\ des\ Inventars\ neu.\ \n\ zeichnet\ die\ Items\ die\ im\ Inventar\ vorhanden\ sind\n
comment2.params=xPos\ yPos
comment2.target=void\ removeFromInventory(int,\ int)
comment2.text=\n\ Entfernt\ das\ Objekt\ aus\ dem\ Inventar\ vom\ "selectedSlot"\ und\ setzt\ es\ wieder\ in\ die\ Welt.\n\ \n\ @param\ xPos\ x-Position\ des\ Flappers,\ an\ die\ das\ Objekt\ zur\u00FCck\ gesetzt\ wird\n\ @param\ yPos\ y-Position\ des\ Flappers,\ an\ die\ das\ Objekt\ zur\u00FCck\ gesetzt\ wird\n
comment3.params=index
comment3.target=void\ clearSlot(int)
comment3.text=\n\ Leert\ den\ passenden\ Slot\ des\ Inventar.\n
comment4.params=cls
comment4.target=int\ findSlot(java.lang.Class)
comment4.text=\n\ Liefert\ den\ Slot\ der\ eine\ Instanz\ der\ angegebenen\ Klasse\ enth\u00E4lt.\n\ \n\ @return\ de\ Slot\ auf\ dem\ die\ Instanz\ liegt.\n\ es\ muss\ hier\ bereits\ garantiert\ sein\ dass\ ein\ derartiges\ item\ im\ Inventar\ existiert\n
comment5.params=cls
comment5.target=boolean\ contains(java.lang.Class)
comment5.text=\n\ Liefert\ zur\u00FCck\ ob\ sich\ irgendwo\ im\ Inventar\ ein\ Objekt\ der\ gesuchten\ Klasse\ befindet.\n\ \n\ @return\ true\ wenn\ es\ gefunden\ wurde.\n
comment6.params=
comment6.target=boolean\ isEmpty()
comment6.text=\n\ Pr\u00FCft,\ ob\ das\ Inventar\ leer\ ist.\n\ \n\ @return\ true,\ wenn\ das\ gesamte\ Inventar\ leer\ ist,\ andernfalls\ false.\n
comment7.params=
comment7.target=boolean\ hasSpace()
comment7.text=\n\ Pr\u00FCft,\ ob\ das\ Inventar\ noch\ freie\ Pl\u00E4tze\ hat.\n\ \n\ @return\ true,\ wenn\ das\ inventar\ freie\ Slots\ besitzt,\ andernfalls\ false.\n
comment8.params=moveselection
comment8.target=void\ setSelection(int)
comment8.text=\n\ is\ used\ to\ move\ the\ selection\ between\ the\ item\ Slots\n\ the\ input\ is\ the\ direction\ the\ Slot\ will\ move\ in\n
comment9.params=user
comment9.target=void\ useSelection(greenfoot.Actor)
comment9.text=\n\ verwendung\ von\ items\ mit\ boolean\ "usable"(z.B.\ Torpedos)\n\ der\ \u00FCbergebene\ Aktor\ ist\ der\ verwender\ des\ items\n
numComments=11
