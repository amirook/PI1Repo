#BlueJ class context
comment0.params=cls
comment0.target=greenfoot.Actor\ getCollidingObject(java.lang.Class)
comment0.text=\n\ Liefert\ das\ Objekt\ der\ Klasse\ cls,\ mit\ dem\ eine\ Kolliosion\ besteht.\n\ @param\ cls\ die\ Klasse,\ nach\ dessen\ Kollision\ gepr\u00FCft\ wird\n\ @return\ das\ Objekt,\ mit\ dem\ Kollidiert\ wurde\n
comment1.params=cls
comment1.target=boolean\ collidesWith(java.lang.Class)
comment1.text=\n\ Pr\u00FCft\ ob\ gerade\ eine\ Kollision\ besteht\n\ @param\ cls\ die\ Klasse,\ nach\ dessen\ Kollision\ gepr\u00FCft\ wird\n\ @return\ ob\ gerade\ eine\ Kollision\ mit\ einer\ Instanz\ der\ Klasse\ cls\ besteht\n
comment2.params=cls
comment2.target=boolean\ newCollisionWith(java.lang.Class)
comment2.text=\n\ Pr\u00FCft,\ ob\ gerade\ eine\ neue\ Kollision\ mit\ einer\ Instanz\n\ der\ Klasse\ cls\ begonnen\ hat.\n\ @param\ cls\ die\ Klasse,\ nach\ dessen\ Kollision\ gepr\u00FCft\ wird\n\ @return\ ob\ gerade\ eine\ neue\ Kollision\ mit\ einer\ Instanz\ der\ Klasse\ cls\ begonnen\ hat\n
comment3.params=xWorld\ yWorld\ obj
comment3.target=boolean\ visiblePixelAt(int,\ int,\ greenfoot.Actor)
comment3.text=\n\ Rechnet\ Weltkoordinaten\ in\ die\ Bildkoordinaten\ des\ Actors\ um\ und\ pr\u00FCft\n\ ob\ dort\ ein\ Sichrbarer\ sichtbarer\ Pixel\ ist\n\ @param\ xWorld\ x-Weltkoordiante\n\ @param\ yWorld\ y-Weltkoordinate\n\ @param\ obj\ Das\ Objekt\ in\ dessen\ Bildkoordinaten\ umgerechnet\ werden\ soll\n\ @return\ true,\ wenn\ an\ den\ Koordinsten\ ein\ Sichtbarer\ Pixel\ im\ Bild\ ist\n
comment4.params=obj\ x\ y
comment4.target=boolean\ pixelsWithinImageBounds(Crashable,\ int,\ int)
comment4.text=\n\ Pr\u00FCft\ ob\ ein\ die\ Koordinaten\ innerhalb\ des\ Bildes\ eines\ Objektes\ liegen\n\ @param\ obj\ Das\ zu\ Pr\u00FCfende\ Objekt\n\ @param\ x\ X-Koordinate\n\ @param\ y\ Y-Koordinate\n\ @return\ true,\ wenn\ die\ Koordinaten\ innerhalb\ des\ Bildes\ liegen\n
numComments=5
